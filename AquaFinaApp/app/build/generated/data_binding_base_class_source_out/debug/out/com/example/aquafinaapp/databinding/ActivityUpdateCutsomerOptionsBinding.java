// Generated by view binder compiler. Do not edit!
package com.example.aquafinaapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aquafinaapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateCutsomerOptionsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView btnUpdateCustomerContactNo;

  @NonNull
  public final TextView btnUpdateCustomerEmail;

  @NonNull
  public final TextView btnUpdateCustomerPassword;

  @NonNull
  public final ImageView updateContactIcon;

  @NonNull
  public final ImageView updateEmailIcon;

  @NonNull
  public final ImageView updatePasswordIcon;

  private ActivityUpdateCutsomerOptionsBinding(@NonNull LinearLayout rootView,
      @NonNull TextView btnUpdateCustomerContactNo, @NonNull TextView btnUpdateCustomerEmail,
      @NonNull TextView btnUpdateCustomerPassword, @NonNull ImageView updateContactIcon,
      @NonNull ImageView updateEmailIcon, @NonNull ImageView updatePasswordIcon) {
    this.rootView = rootView;
    this.btnUpdateCustomerContactNo = btnUpdateCustomerContactNo;
    this.btnUpdateCustomerEmail = btnUpdateCustomerEmail;
    this.btnUpdateCustomerPassword = btnUpdateCustomerPassword;
    this.updateContactIcon = updateContactIcon;
    this.updateEmailIcon = updateEmailIcon;
    this.updatePasswordIcon = updatePasswordIcon;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateCutsomerOptionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateCutsomerOptionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_cutsomer_options, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateCutsomerOptionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnUpdateCustomerContactNo;
      TextView btnUpdateCustomerContactNo = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateCustomerContactNo == null) {
        break missingId;
      }

      id = R.id.btnUpdateCustomerEmail;
      TextView btnUpdateCustomerEmail = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateCustomerEmail == null) {
        break missingId;
      }

      id = R.id.btnUpdateCustomerPassword;
      TextView btnUpdateCustomerPassword = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateCustomerPassword == null) {
        break missingId;
      }

      id = R.id.updateContactIcon;
      ImageView updateContactIcon = ViewBindings.findChildViewById(rootView, id);
      if (updateContactIcon == null) {
        break missingId;
      }

      id = R.id.updateEmailIcon;
      ImageView updateEmailIcon = ViewBindings.findChildViewById(rootView, id);
      if (updateEmailIcon == null) {
        break missingId;
      }

      id = R.id.updatePasswordIcon;
      ImageView updatePasswordIcon = ViewBindings.findChildViewById(rootView, id);
      if (updatePasswordIcon == null) {
        break missingId;
      }

      return new ActivityUpdateCutsomerOptionsBinding((LinearLayout) rootView,
          btnUpdateCustomerContactNo, btnUpdateCustomerEmail, btnUpdateCustomerPassword,
          updateContactIcon, updateEmailIcon, updatePasswordIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
